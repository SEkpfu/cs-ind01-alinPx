////////////////
class Program
{
    static void Main()
    {
        Console.Write("Vvedite kol-vo chisel: ");
        int n = int.Parse(Console.ReadLine());
        double[] xZn = new double[n];
        double[] fZn = new double[n];
        for (int i = 0; i < n; i++)
        {
            Console.Write($"Vvedite chislo x{i + 1}: ");
            xZn[i] = double.Parse(Console.ReadLine());
            fZn[i] = CalculateF(xZn[i]);
        }
        int T_vOblasti = Schet_TvOblasti(xZn, fZn);
        Console.WriteLine($"Kol-vo tochek v olaasti: {T_vOblasti}");
        Nauti_Dalniu_Tprint(xZn, fZn);
    }
    static double CalculateF(double x)
    {
        if (x < -3)
        {
            return ((1.0 + x * x * x) / (2.0 * x)) * ((x + 4.0) / (x * x - 1.0/ x));
        }
        else if (x >= -3 && x < 2 * Math.PI)
        {
            return (x * x - 3) * Math.Sin(2 * x);
        }
        else
        {
            return 2 * (1.0 / 3.0);
        }
    }
    static int Schet_TvOblasti(double[] xZnach, double[] fZnach)
    {
        int count = 0;
        for (int i = 0; i < xZnach.Length; i++)
        {
            double x = xZnach[i];
            double y = fZnach[i];

            if ((x <= 0 && y <= 0 && x*x + y*y <= 100)||(y >= -10 && y <= -5 && x <= -10 && x*x + y*y <=100)||(x >= 0 && y <= 0 && x-y <= 10))
            {
                count++;
            }
            else
            {
                double rast = Math.Sqrt(x*x + y*y);
                Console.WriteLine($"Rasstouanie ot tochki ({x}, {y}) do (0, 0): {rast}");
            }
        }
        return count;
    }
    static void Nauti_Dalniu_Tprint(double[] xValues, double[] fValues)
    {
        double max_rast = 0;
        double dalnX = 0;
        double dalnY = 0;
        for (int i = 0; i < xValues.Length; i++)
        {
            double x = xValues[i];
            double y = fValues[i];
            if (x < 0 && y > 0)
            {
                double rasst = Math.Sqrt(x * x + y * y);
                if (rasst > max_rast)
                {
                    max_rast = rasst;
                    dalnX = x;
                    dalnY = y;
                }
            }
        }
    }
}
